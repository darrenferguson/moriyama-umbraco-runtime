{
  "Name": "Ferguson Moriyama and Umbraco 5: Part 2",
  "Type": "BlogPost",
  "CreateDate": "2012-02-18T14:01:56",
  "UpdateDate": "2015-01-19T18:43:49",
  "CreatorName": "Darren Ferguson",
  "WriterName": "Darren Ferguson",
  "Url": "http://localhost/2012/02/18/ferguson-moriyama-and-umbraco-5-part-2/",
  "RelativeUrl": "/2012/02/18/ferguson-moriyama-and-umbraco-5-part-2/",
  "Content": {
    "umbracoUrlAlias": "",
    "HideInNavigation": false,
    "umbracoInternalRedirectId": "",
    "redirect": "",
    "displayDate": "2012-02-18T13:52:00Z",
    "title": "Ferguson Moriyama and Umbraco 5: Part 2",
    "shortUrl": "http://djf.so/w5MYDb",
    "summary": "'Ferguson Moriyama and Umbraco 5' - a blog post by Darren Ferguson about umbraco 5, umbraco jupiter, ferguson moriyama written on 27 January 2012",
    "tags": "umbraco 5, umbraco jupiter, ferguson moriyama",
    "bodyText": "\r\n<p>So a little while later than planned I'm taking the next steps\r\nwith building the new <a\r\nhref=\"http://www.fergusonmoriyama.com/\">Ferguson Moriyama</a> site\r\nwith Umbraco 5. Since&nbsp;<a\r\nhref=\"/2012/01/27/ferguson-moriyama-and-umbraco-5\">last time I\r\nwrote</a> I've upgraded to Umbraco to the <a\r\nhref=\"http://umbraco.codeplex.com/releases/view/81440\">RTM\r\nrelease</a>, but I've also upgraded the office PC so it is hard to\r\ncomment on performance.</p>\r\n\r\n<p>This time I'm going to look at adding CSS and JavaScript to my\r\nsite and also trying to output some of the site navigation.</p>\r\n\r\n<p><strong><em>Adding some style</em></strong></p>\r\n\r\n<p>I already have the mark-up for my site built so my first step\r\ntoday is to grab the CSS and the JavaScript and drop it into the\r\nappropriate folders under the Umbraco web root. A little digging\r\naround suggests that the place to put CSS files is in\r\n<em>~/Content/Styles&nbsp;</em> so I drop my CSS files in there and\r\nhappily they appear in the <em>Settings</em> section of Umbraco\r\njust as they did in Umbraco 4.</p>\r\n\r\n<p>For JavaScript the location is <em>~/Scripts/Umbraco</em> so I\r\ncopy my file in and the back office looks nicely familiar.</p>\r\n\r\n<p><a href=\"/media/128968/18-02-2012_10-52-23.png\"><img src=\"/media/128968/18-02-2012_10-52-23.png\" width=\"170\" height=\"343\" alt=\"18-02-2012 10-52-23\"/></a></p>\r\n\r\n<p style=\"clear: both;\">In Umbraco 5 you can create folders\r\nunderneath the StyleSheets root folder using the Umbraco UI which\r\nis an improvement on version 4.</p>\r\n\r\n<p>I now want to add my CSS and JavaScript to the pages on my site\r\nso I revisit the <em>Layout</em> template that I worked with in my\r\nprevious post. At this point I realise that by modifying the\r\ndefault Layout I've trashed the out of the box example layout, but\r\nluckily I can now just go and install a clean copy of Version 5\r\nfrom <a href=\"http://www.microsoft.com/web/webmatrix/\">web\r\nmatrix</a> to use as a reference alongside the site that I am\r\nbuilding.</p>\r\n\r\n<p>The dev dataset Layout contains examples of including\r\nJavasScript and CSS in a page so I quickly copy and paste them into\r\nmy own Layout.</p>\r\n\r\n<p><a href=\"/media/128973/18-02-2012_11-01-54.png\"><img src=\"~/media/128973/18-02-2012_11-01-54_499x174.jpg\"  width=\"499\"  height=\"174\" alt=\"18-02-2012 11-01-54\"/></a></p>\r\n\r\n<p style=\"clear: both;\"><em>Click image for a larger\r\nversion</em></p>\r\n\r\n<p style=\"clear: both;\">I'm a little fussy and I'm not really happy\r\nthat the URL of my JavaScript file contains the word\r\n<em>Umbraco</em> - as a pedant I'd prefer that my site didn't\r\nreveal the technology that was powering it. This happens as the\r\nScripts tree maps to <em>~/Scripts/Umbraco</em> - I hope there is a\r\nway around this.</p>\r\n\r\n<p>I copy some images into <em>~/Content/Images</em> and drop some\r\nstatic mark-up into the body of my Home template and I've got a\r\nhalf decent looking homepage.</p>\r\n\r\n<p><strong><em>Making it dynamic</em></strong></p>\r\n\r\n<p>So now I have a website of sorts the two parts that I haven't\r\ncovered are dynamic parts of pages such as navigation and forms. In\r\nUmbraco 4 we'd have called these <em>Macros</em>.</p>\r\n\r\n<p>Glancing around Umbraco 5 I notice that you can add Partial\r\nViews in the settings section of Umbraco and just render them out\r\nonto a template using <strong><em>@Html.Partial</em></strong> - a\r\nfamiliar piece of syntax for those who have worked with ASP.net MVC\r\na little. Partial views created from the Umbraco back office are\r\nstored in <em>~/Views/Umbraco/Partial</em></p>\r\n\r\n<p>I decide to start with my top level navigation which strictly\r\nspeaking I could write into the Layout directly but I'm trying to\r\ndiscover some of the new features of Umbraco 5 so I create a new\r\npartial. After a bit of playing I end up with the following\r\ncode:</p>\r\n\r\n<pre class=\"brush: csharp;\">\r\n@inherits RenderViewPage\r\n@{ var counter = 1; }\r\n&lt;ul&gt;\r\n&nbsp;&nbsp;&nbsp; &lt;li&gt;&lt;a href=\"/\"&gt;Home&lt;/a&gt;&lt;/li&gt;\r\n&nbsp;&nbsp;&nbsp; @foreach (var page in DynamicModel.AncestorsOrSelf.Last().Children)\r\n&nbsp;&nbsp;&nbsp; {\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;li class=\"item-@counter\"&gt;&lt;a href=\"@page.Url\"&gt;@page.Name&lt;/a&gt;&lt;/li&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; counter++;\r\n&nbsp;&nbsp;&nbsp; }\r\n&lt;/ul&gt;\r\n</pre>\r\n\r\n<p>I add this to my layout by adding:</p>\r\n\r\n<p>\r\n<strong><em>@Html.Partial(\"topLevelNavigation\")</em></strong></p>\r\n\r\n<p>where topLevelNavigation.cshtml is the name of my partial view.\r\nThe code above just finds the root node of the current site and\r\niterates over the children.</p>\r\n\r\n<p><strong><em>A moment of realisation</em></strong></p>\r\n\r\n<p>In playing with Umbraco templates (or views) and also partials I\r\nhad a moment of realisation. It is so nice in Umbraco 5 to have a\r\ntemplating language (or view engine) that is free from\r\nproprietary/custom tags and without references to Macros that could\r\ncontain anything from XSLT to Ruby.</p>\r\n\r\n<p>I was one of the people who grumbled and complained when XSLT\r\nwas nudged out of the door in Umbraco 5 but now I've used the\r\nfinished product I conclude that it was the right choice. You can't\r\nplease all of the people all of the time but standardising on the\r\nMicrosoft supported stack gives the developer a fantastic\r\nexperience when using Visual Studio. It also means when inheriting\r\nor supporting legacy sites that you don't unwrap the box to find\r\nout that you need to hire an entirely new development\r\nteam.&nbsp;</p>\r\n\r\n<p><strong><em>Next Time</em></strong></p>\r\n\r\n<p>The old Ferguson Moriyama site used web site forms and Umbraco\r\nto handle a lot of our back office processes - in the next post in\r\nthis series I'll be trying to put some forms onto my web pages and\r\nexperiment with using hive to abstract the storage of those\r\nforms.</p>\r\n",
    "commentsDisabled": 0
  },
  "Template": "Post",
  "CacheTime": null,
  "SortOrder": 1,
  "Level": 5
}