<?xml version="1.0" encoding="utf-8"?>
<BlogPost guid="98e00e60-5131-4ee8-9309-0ce8f3dd7437" id="1829" nodeName="More on NClassifier and content intelligence" isDoc="" updated="2013-10-28T17:22:38.32Z" parentGUID="e6d628e9-0ed4-4fed-8429-c5566ff3881e" nodeTypeAlias="BlogPost" templateAlias="BlogPost" sortOrder="1" published="true">
  <umbracoUrlAlias><![CDATA[/more-on-nclassifier-and-content-intelligence]]></umbracoUrlAlias>
  <umbracoNaviHide>0</umbracoNaviHide>
  <umbracoInternalRedirectId></umbracoInternalRedirectId>
  <redirect></redirect>
  <displayDate>F56EAE9D-5A71-46C2-8973-4C0DCBF9211D-09-22T10:03:00</displayDate>
  <title></title>
  <shortUrl><![CDATA[http://bit.ly/eldyRp]]></shortUrl>
  <summary><![CDATA['More on NClassifier and content intelligence' - a blog post by Darren Ferguson about search engine methods, search engine written on 22 September F56EAE9D-5A71-46C2-8973-4C0DCBF9211D]]></summary>
  <tags><![CDATA[search engine methods, search engine]]></tags>
  <bodyText><![CDATA[<p><strong>Note:</strong> When reading this post, click through to the detail view so that you can see the output that is being discussed. </p><p>Ever seen pages like your <a href="http://www.flickr.com/photos/darrenferguson/tags/">flickr tag list</a> that use the pretty cool effect of displaying the tag in a size that relates to its frequency?</p><p>As well as classifying your posts NClassifier makes it easy to get information on how often words occur in a piece of text. If you click through to any of the detail page of any blog post you'll see that yesterdays classification now lists information about how often words occur in the post. It would be a relatively easy job to randomize the order in which the words appear and apply a font size based on how many times they occur in a document or even across an entire website.</p><p>We have to remember that the classifier has no knowledge of the meaning of words, so to improve its output we employ few common search engine methods.</p><p><strong>Stop Words: </strong>these are a list of words that should not be considered as they are not relevant to the classification of the document e.g. (a, the, if, you, he, she). Stop words are somtimes called noise words.</p><p><strong>Custom words: </strong>Non dictionary words that you want to be included in classification e.g. (Umbraco, c#, Darren).</p><p><strong>Significant words:</strong> Words that you want to add weight to, in my case Umbraco, Pho and words that relate to these topics.</p><p>You can see all of these in the updated <a href="http://www.fergusonmoriyama.com/classify.xml">config file</a>. Experience has taught me to also exclude single letter words and numeric strings.</p><p>The NClassifier word list is then passed through NetSpell and sorted by number of occurrences to give the output that you see.</p><p>Finally, although useful, these classifiers need a lot of training to be useful. As you can probably see, you will end up adding more and more words to your list of stop words and gradually the summarization becomes more concise. To work around the need to train your classifiers you can only consider significant words in the output.</p><p>This example is very simple, significant words are not weighted, so the only factor that determines the importance of a word in a document is the number of times that it occurs. Weighting can be very complex, so I'll leave it for now.</p><p>As with my first NClassifier example, I think it would be best to employ this as an ActionHandler if being used within Umbraco. To employ site wide word counts you would need a data store with the columns documentId, wordId, occurenceCount in order that you could easily update your information upon re-publish.</p>]]></bodyText>
  <commentsDisabled>0</commentsDisabled>
</BlogPost>