<?xml version="1.0" encoding="utf-8"?>
<Template>
  <Name>Archive</Name>
  <Alias>Archive</Alias>
  <Design><![CDATA[@using Moriyama.Blog.Project.Application
@using Moriyama.Blog.Project.Extension
@using Moriyama.Library.Html
@using Moriyama.Runtime.Extension
@using Moriyama.Runtime.Models
@model Moriyama.Runtime.Models.RuntimeContentModel
@{
    Layout = "Layout.cshtml";
    int? lastYear = null;

    var page = 1;


    if (!int.TryParse(Request["page"], out page))
    {
        page = 1;
    }
    
    var posts = Model.Home().Descendants(new Dictionary<string, string> {{"Type", "BlogPost"}}).OrderByDescending(x => x.CreateDate);
    var paged = new PagedList<RuntimeContentModel>(posts.AsQueryable(), page, 10);
    var stripper = new HtmlTagStripper(new[] { "" }); 
}
@functions {

    public string TruncateAtWord(string input, int length)
    {
        if (input == null || input.Length < length)
            return input;
        int iNextSpace = input.LastIndexOf(" ", length);
        return string.Format("{0} ...", input.Substring(0, (iNextSpace > 0) ? iNextSpace : length).Trim());
    }
}
<h1 class="page-title">Blog Archive</h1>

<ul class="article-list">
    @foreach (var post in paged.Items)
    {
        var bodyText = post.GetValue<string>("bodyText");
        bodyText = stripper.RemoveUnwantedTags(bodyText);
        
        if (lastYear == null || lastYear != post.CreateDate.Year)
        {
            lastYear = post.CreateDate.Year;
            <h2>@lastYear</h2>
        }
        <li>
            <h3><a href="@post.RelativeUrl">@post.Name</a></h3>
            @Html.Partial("~/Views/Partials/PostMetaData.cshtml", post)
            
            <p>
                @(bodyText.Length > 500 ? TruncateAtWord(bodyText, 500) : bodyText)

                <a href="@post.RelativeUrl">Read More »</a>
            </p>
            
            @Html.Partial("~/Views/Partials/Social.cshtml", post)
        </li>
    }
</ul>
@if (paged.Pages > 1)
{
    <div class="pagination">
        @if (paged.Page > 1)
        {
            <a class="prev" href="?page=@(paged.Page - 1)">« Previous page</a>
        }
        @if (paged.Page < paged.Pages)
        {
            <a class="next" href="?page=@(paged.Page + 1)">Next page »</a>
        }
    </div>
}]]></Design>
</Template>