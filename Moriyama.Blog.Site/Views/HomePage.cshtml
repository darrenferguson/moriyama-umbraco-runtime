@using Moriyama.Blog.Project.Application
@using Moriyama.Library.Html
@using Moriyama.Runtime.Extension
@using Moriyama.Runtime.Models
@model RuntimeContentModel
@{
    Layout = "Layout.cshtml";
    var posts = Model.Descendants(new Dictionary<string, string> {{"Type", "BlogPost"}}).OrderByDescending(post => post.CreateDate);

    var page = 1;


    if (!int.TryParse(Request["page"], out page))
    {
        page = 1;
    }

    var paged = new PagedList<RuntimeContentModel>(posts.AsQueryable(), page, 10);
    var stripper = new HtmlTagStripper(new[] { "" }); 
}
@functions {

    public string TruncateAtWord(string input, int length)
    {
        if (input == null || input.Length < length)
            return input;
        int iNextSpace = input.LastIndexOf(" ", length);
        return string.Format("{0} ...", input.Substring(0, (iNextSpace > 0) ? iNextSpace : length).Trim());
    }
}
<h1 class="page-title">Blog</h1>


@foreach (var post in paged.Items)
{
    <article>
        <h2>
            <a href="@post.RelativeUrl">
                @post.Name
            </a>
        </h2>
        
        @Html.Partial("~/Views/Partials/PostMetaData.cshtml", post)

        @*@Html.Raw(@post.GetValue<string>("bodyText"))*@
        
        @{
            var bodyText = post.GetValue<string>("bodyText");
            bodyText = stripper.RemoveUnwantedTags(bodyText);
        }
        
        <p>
            @(bodyText.Length > 500 ? TruncateAtWord(bodyText, 500) : bodyText)
        
            <a href="@post.RelativeUrl">Read More »</a>
        </p>
        @*<footer>
            <a class="alignright" href="@post.RelativeUrl#comments">Read More »</a>
        </footer>*@
        
        @if (post.Children().Any())
        {
            var comments = post.Children().Count();
            
            <small>This post has @comments @(comments ==1 ? "comment" : "comments").</small>
        }
        
        @Html.Partial("~/Views/Partials/Social.cshtml", post)

    </article>
}
@if (paged.Pages > 1)
{
    <div class="pagination">
        @if (paged.Page > 1)
        {
            <a class="prev" href="?page=@(paged.Page - 1)">« Previous page</a>
        }
        @if (paged.Page < paged.Pages)
        {
            <a class="next" href="?page=@(paged.Page + 1)">Next page »</a>
        }
    </div>
}