{
  "Name": "The Umbraco XSLT for loop",
  "Type": "BlogPost",
  "CreateDate": "2011-02-22T15:40:00",
  "UpdateDate": "2015-01-19T18:43:25",
  "CreatorName": "Darren Ferguson",
  "WriterName": "Darren Ferguson",
  "Url": "http://localhost/2011/2/22/the-umbraco-xslt-for-loop/",
  "RelativeUrl": "/2011/2/22/the-umbraco-xslt-for-loop/",
  "Content": {
    "umbracoUrlAlias": "/the-umbraco-xslt-for-loop",
    "HideInNavigation": false,
    "umbracoInternalRedirectId": "",
    "redirect": "",
    "displayDate": "2011-02-22T15:40:00Z",
    "title": "",
    "shortUrl": "http://bit.ly/g8rMY9",
    "summary": "'The Umbraco XSLT for loop' - a blog post by Darren Ferguson about XSLT, paging, Human Interest written on 22 February 2011",
    "tags": "XSLT, paging, Umbraco",
    "bodyText": "\r\n<p>So one of the things I enjoy about teaching the Umbraco Level 2\r\ncourse is that from time to time I get to go <em>off piste</em>.\r\nSomeone will ask a question that isn't part of the materials and I\r\nhave to do a bit of creative thinking to solve what they want to\r\nachieve.</p>\r\n\r\n<p>Recently I met a chap on my course who didn't like XSLT. I love\r\nXSLT, but I wasn't convincing this guy. There are no for loops you\r\nsee, you can't do something n times. Words like recursion and\r\nfunctional were met with looks of resentment. So I gave up - I gave\r\nhim an XSLT for loop.</p>\r\n\r\n<p>After I bit of hacking I had this XSLT extension method - which\r\nI'd never use myself - but hey:</p>\r\n\r\n<pre class=\"brush: csharp;\">\r\nusing System.Xml;\r\nusing System.Xml.XPath;\r\n\r\nusing umbraco;\r\n\r\nnamespace Level2Course.XsltExtensions\r\n{\r\n    [XsltExtension]\r\n    public class SyntaxHighlighter\r\n    {\r\n        public static XPathNodeIterator For(int from, int to)\r\n        {\r\n            var doc = new XmlDocument();\r\n            doc.LoadXml(\"&lt;iterator&gt;&lt;/iterator&gt;\");\r\n\r\n            for(var count=from; count&lt;=to; count++)\r\n            {\r\n                var iterationNode = doc.CreateElement(\"iteration\");\r\n                iterationNode.InnerText = count.ToString();\r\n                doc.DocumentElement.AppendChild(iterationNode);\r\n            }\r\n\r\n            return doc.CreateNavigator().Select(\"//iterator/iteration\");\r\n        }\r\n    }\r\n}\r\n</pre>\r\n\r\n<p>This was all hacked together on the course so apologies for the\r\nirrelevant namespacing etc.</p>\r\n\r\n<p>So the above now allows us to do the common task that is paging\r\nusing <em>\"for loops</em>\" in XSLT :)</p>\r\n\r\n<pre class=\"brush: xml;\">\r\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\r\n&lt;!DOCTYPE xsl:stylesheet [\r\n  &lt;!ENTITY nbsp \" \"&gt;\r\n]&gt;\r\n&lt;xsl:stylesheet\r\n  version=\"1.0\"\r\n  xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\r\n  xmlns:msxml=\"urn:schemas-microsoft-com:xslt\"\r\n  xmlns:umbraco.library=\"urn:umbraco.library\"\r\n  xmlns:Level2Course.XsltExtensions.SyntaxHighlighter=\"urn:Level2Course.XsltExtensions.SyntaxHighlighter\"\r\n  exclude-result-prefixes=\"msxml umbraco.library Level2Course.XsltExtensions.SyntaxHighlighter\"&gt;\r\n\r\n  &lt;xsl:output method=\"xml\" omit-xml-declaration=\"yes\"/&gt;\r\n\r\n  &lt;xsl:param name=\"currentPage\"/&gt;\r\n  &lt;xsl:param name=\"itemsPerPage\" select=\"2\"/&gt;\r\n\r\n  &lt;xsl:template match=\"/\"&gt;\r\n    \r\n    &lt;xsl:variable name=\"pageUrl\" select=\"umbraco.library:NiceUrl($currentPage/@id)\"/&gt;\r\n    &lt;xsl:variable name=\"childNodes\" select=\"$currentPage/* [@isDoc and string(umbracoNaviHide) != '1']\"/&gt;\r\n    \r\n    &lt;xsl:variable name=\"pageNumber\"&gt;\r\n      &lt;xsl:choose&gt;\r\n        &lt;xsl:when test=\"umbraco.library:RequestQueryString('page') &lt;= 1 or string(umbraco.library:RequestQueryString('page')) = '' or string(umbraco.library:RequestQueryString('page')) = 'NaN'\"&gt;1&lt;/xsl:when&gt;\r\n        &lt;xsl:otherwise&gt;\r\n          &lt;xsl:value-of select=\"umbraco.library:RequestQueryString('page')\"/&gt;\r\n        &lt;/xsl:otherwise&gt;\r\n      &lt;/xsl:choose&gt;\r\n    &lt;/xsl:variable&gt;\r\n\r\n    &lt;xsl:variable name=\"numberOfNodes\" select=\"count($childNodes)\"/&gt;\r\n    &lt;xsl:variable name=\"numberOfPages\" select=\"ceiling($numberOfNodes div $itemsPerPage)\"/&gt;\r\n\r\n    &lt;xsl:variable name=\"startIndex\" select=\"(($pageNumber -1) * $itemsPerPage) + 1\"/&gt;\r\n    &lt;xsl:variable name=\"endIndex\"&gt;\r\n      &lt;xsl:choose&gt;\r\n        &lt;xsl:when test=\"($startIndex + $itemsPerPage) &gt; $numberOfNodes\"&gt;\r\n          &lt;xsl:value-of select=\"$numberOfNodes\"/&gt;\r\n        &lt;/xsl:when&gt;\r\n        &lt;xsl:otherwise&gt;\r\n          &lt;xsl:value-of select=\"($startIndex + $itemsPerPage) -1\"/&gt;\r\n        &lt;/xsl:otherwise&gt;\r\n      &lt;/xsl:choose&gt;\r\n    &lt;/xsl:variable&gt;\r\n\r\n    &lt;div&gt;\r\n      &lt;em&gt;\r\n        Page &lt;xsl:value-of select=\"$pageNumber\"/&gt; of &lt;xsl:value-of select=\"$numberOfPages\"/&gt;.\r\n      &lt;/em&gt;\r\n    &lt;/div&gt;\r\n\r\n    &lt;div&gt;\r\n      &lt;xsl:for-each select=\"Level2Course.XsltExtensions.SyntaxHighlighter:For($startIndex,$endIndex)\"&gt;\r\n        &lt;xsl:variable name=\"counter\" select=\"number(.)\"/&gt;\r\n        &lt;xsl:variable name=\"node\" select=\"$childNodes[$counter]\"/&gt;\r\n        &lt;p&gt;\r\n          &lt;xsl:value-of select=\"$counter\"/&gt;. \r\n          &lt;a href=\"{umbraco.library:NiceUrl($node/@id)\"&gt;\r\n            &lt;xsl:value-of select=\"$node/@nodeName\"/&gt;\r\n          &lt;/a&gt;\r\n        &lt;/p&gt;\r\n      &lt;/xsl:for-each&gt;\r\n    &lt;/div&gt;\r\n\r\n    &lt;div&gt;\r\n      &lt;xsl:if test=\"$pageNumber &gt; 1\"&gt;\r\n        &lt;a href=\"{pageUrl}?page={$pageNumber - 1}\"&gt;previous&lt;/a&gt;\r\n      &lt;/xsl:if&gt;\r\n\r\n      &lt;xsl:for-each select=\"Level2Course.XsltExtensions.SyntaxHighlighter:For(1, $numberOfPages)\"&gt;\r\n        &lt;a href=\"{pageUrl}?page={.}\"&gt;\r\n          &lt;xsl:value-of select=\".\"/&gt;\r\n        &lt;/a&gt;\r\n      &lt;/xsl:for-each&gt;\r\n\r\n      &lt;xsl:if test=\"$pageNumber &lt; $numberOfPages\"&gt;\r\n        &lt;a href=\"{$pageUrl}?page={$pageNumber + 1}\"&gt;next&lt;/a&gt;\r\n      &lt;/xsl:if&gt;\r\n    &lt;/div&gt;\r\n  &lt;/xsl:template&gt;\r\n\r\n&lt;/xsl:stylesheet&gt;\r\n</pre>\r\n",
    "commentsDisabled": 0
  },
  "Template": "Post",
  "CacheTime": null,
  "SortOrder": 1,
  "Level": 5
}